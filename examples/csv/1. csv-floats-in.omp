; OM File Header - Saved 2019/09/19 9:13:32
; (6.15 :patc (om-make-point 10 260) (om-make-point 0 23) (om-make-point 1440 855) "" 183 0 nil "2019/09/19 9:13:32")
; End File Header
(in-package :om)(load-lib-for (quote ("OMio")))(setf *om-current-persistent* (om-load-patch1 "1. csv-floats-in" (quote ((let ((box (om-load-boxcomment "comment" (om-make-point 386 85) (quote "You can change the keyword :defaultformat to short-floats if you don't need long floats precision. (see documentation of the function)") "" (om-make-point 167 449) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "CSV-FLOATS-IN" (quote csv-floats-in) (quote ((om-load-inputfun (quote input-funbox) "<n>" "FILENAME" 5) (om-load-inputfun (quote input-funbox) "<n>" "ROWSASSTRINGS" nil) (om-load-inputfun (quote input-funbox) "<n>" "COLSASSTRINGS" nil) (om-load-inputkeyword (quote input-keyword) "" "defaultformat" (quote :defaultformat) (quote long-float) nil))) (om-make-point 57 450) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 129 297) (om-make-point 48 30) (list 0 4) "(0 4)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 407 42) (quote "You can specify which rows should be read as strings instead of numbers (the header of the table, for example)") "" (om-make-point 123 216) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 79 224) (om-make-point 37 30) (list 0) "(0)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "CSV-FLOATS-IN" (quote csv-floats-in) (quote ((om-load-inputfun (quote input-funbox) "<n>" "FILENAME" 5) (om-load-inputfun (quote input-funbox) "<n>" "ROWSASSTRINGS" nil) (om-load-inputfun (quote input-funbox) "<n>" "COLSASSTRINGS" nil))) (om-make-point 57 338) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 386 85) (quote "Likewise, you can specify which columns of the table should be read as strings instead of numbers. In this example, the entire first row will be read as a list of strings. From the second row onwards, the first and the fifth columns (nth 0 and 4) will also be read as strings.") "" (om-make-point 188 286) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 375 34) (quote "2. Convert it to a list (csv table) of lists (csv rows)") "" (om-make-point 140 119) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 375 34) (quote "1. Choose a valid .csv file ") "" (om-make-point 138 34) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "FILE-CHOOSER" (quote file-chooser) (quote nil) (om-make-point 64 24) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "CSV-FLOATS-IN" (quote csv-floats-in) (quote ((om-load-inputfun (quote input-funbox) "<n>" "FILENAME" 5))) (om-make-point 60 100) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((4 0 5 1 nil 0) (2 0 5 2 nil 0) (9 0 10 0 nil 0))) nil 6.15))